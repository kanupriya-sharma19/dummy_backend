// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  USER
  TURFOWNER
}

model User {
  id                   String      @id @default(cuid())
  name                 String
  email                String      @unique
  password             String
  phoneNumber          String
  dob                  DateTime?
  gender               String?
  city                 String?
  gamePreferences      String?
  profilePhoto         String?
  resetToken           String?     @unique
  resetTokenExpiration DateTime?
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  role                 Role
  bookings             Booking[]
  TurfOwner            TurfOwner[]
}

enum TurfOwnerType {
  INDIVIDUAL
  ORGANIZATION
}

model TurfOwner {
  id           String  @id @default(cuid())
  name         String
  email        String  @unique
  password     String
  profilePhoto String?
  phoneNumber  String

  turfPhoto         String[]
  turfName          String
  turfDescription   String
  turfLocation      String
  turfSize          String
  turfGames         String[] //(cricket,football,etc)
  amenities         String[]
  ratings           Float    @default(0.0)
  pricePerPerson    Float
  totalSeats        Int
  availableSeats    Int
  available         Boolean  @default(true)
  availabilitySlots Json //example { "day": "Monday", "time": ["6:00 PM - 8:00 PM", "10:00 PM - 12:00 AM"] },

  ownerType          TurfOwnerType
  organizationName   String? // Required if ownerType = ORGANIZATION
  registrationNumber String? // Required if ownerType = ORGANIZATION
  contactPersonName  String? // Required if ownerType = ORGANIZATION
  contactPersonPhone String? // Required if ownerType = ORGANIZATION

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

enum Status {
  PENDING
  CONFIRMED
  COMPLETED
}

model Booking {
  id            String    @id @default(cuid())
  turfId        String
  userId        String
  numberOfSeats Int
  bookedFrom    DateTime
  bookedTo      DateTime
  status        Status    @default(PENDING)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  turf          TurfOwner @relation(fields: [turfId], references: [id]) // Relation to Turf
  user          User      @relation(fields: [userId], references: [id]) // Relation to User
}
